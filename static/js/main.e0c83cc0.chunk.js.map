{"version":3,"sources":["components/header.js","containers/home/home.js","containers/not-found/not-found.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["Header","i18n","useTranslation","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","_React$useState3","_React$useState4","anchorEl","setAnchorEl","changeLanguage","event","val","target","open","Boolean","id","undefined","react_default","a","createElement","AppBar","position","Toolbar","Typography","edge","variant","style","flexGrow","Button","aria-describedby","color","onClick","i18next","language","substring","currentTarget","Language_default","Popper","transition","disablePortal","_ref","TransitionProps","Fade","assign","timeout","Paper","className","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","Home","devices","state","selectedOption","variants","models","showDeviceData","device","vendor","model","changeVendor","v","_this","setState","changeModel","changeVariant","findDevice","error","noOptionsMessage","props","innerProps","t","exists","existIndex","this","forEach","d","i","vendorIndex","modelIndex","_this2","keys","data","device_id","device_data","vendorExists","vendorExistsInDevices","modelExists","modelExistsInDevices","variantExistsInDevices","push","_this3","Container","Grid","container","spacing","item","xs","react_select_browser_esm","options","placeholder","length","bind","images","map","image","key","type","href","subtarget","Component","withTranslation","page404Styles","makeStyles","theme","root","padding","NotFound","classes","marginTop","elevation","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","react","fallback","LinearProgress","react_router_dom","react_router","exact","path","default","window","location","hostname","match","resources","en","translation","de","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0c83cc0.chunk.js","sourcesContent":["import React from \"react\";\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Toolbar, Typography, AppBar, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Popper, Fade, Paper } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nexport default function Header() {\n\n  const { i18n } = useTranslation();\n\n  const [value, setValue] = React.useState('en');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const changeLanguage = event => {\n    var val = event.target.value;\n    i18n.changeLanguage(val);\n    setAnchorEl(null);\n  };\n\n  const openChangeLanguagePopper = event => {\n    setValue(i18next.language.substring(0, 2));\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography edge=\"start\" variant=\"h6\">OpenWrt Firmware Selector Wizard</Typography>\n        <div style={{flexGrow: 1}}></div>\n        <Button aria-describedby={id} color=\"secondary\"  variant=\"contained\" onClick={openChangeLanguagePopper}>\n          Change Language &nbsp;\n          <LanguageIcon />\n        </Button>\n        <Popper \n          id={id} \n          open={open} \n          anchorEl={anchorEl} \n          transition\n          disablePortal\t= {true}\n        >\n          {({ TransitionProps }) => (\n            <Fade {...TransitionProps} timeout={350}>\n              <Paper className=\"language-selector-popper\">\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Change Language</FormLabel>\n                  <br />\n                  <RadioGroup\n                    aria-label=\"Language\"\n                    name=\"language\"\n                    value={value}\n                    onChange={changeLanguage}\n                  >\n                    <FormControlLabel value=\"en\" control={<Radio />} label=\"English\" />\n                    <FormControlLabel value=\"de\" control={<Radio />} label=\"German\" />\n                  </RadioGroup>\n                </FormControl>\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Container, Paper, Typography, Grid, Button } from \"@material-ui/core\";\nimport './home.scss';\nimport Select from 'react-select';\nimport data from '../../data.json';\nimport { withTranslation } from 'react-i18next';\n\nclass Home extends React.Component {\n\n  devices = [];\n  state = {\n    selectedOption: null,\n    variants: [],\n    models: [],\n    showDeviceData: false,\n    device: null,\n    vendor: null,\n    model: null,\n    variant: null\n  };\n\n  vendorExistsInDevices(vendor) {\n    var exists = false;\n    var existIndex = -1;\n    this.devices.forEach((d, i) => {\n      if (d[\"label\"] === vendor) {\n        exists = true;\n        existIndex = i;\n      }\n    });\n    return {\n      exists,\n      existIndex\n    };\n  }\n  \n  modelExistsInDevices(vendorIndex, model) {\n    var exists = false;\n    var existIndex = -1;\n    this.devices[vendorIndex][\"value\"].forEach((d, i) => {\n      if (d[\"label\"] === model) {\n        exists = true;\n        existIndex = i;\n      }\n    });\n    return {\n      exists,\n      existIndex\n    };\n  }\n  \n  variantExistsInDevices(vendorIndex, modelIndex, variant) {\n    var exists = false;\n    var existIndex = -1;\n    this.devices[vendorIndex][\"value\"][modelIndex][\"value\"].forEach((d, i) => {\n      if (d[\"label\"] === variant) {\n        exists = true;\n        existIndex = i;\n      }\n    });\n    return {\n      exists,\n      existIndex\n    };\n  }\n\n  componentDidMount() {\n    Object.keys(data[\"devices\"]).forEach((device_id) => {\n      var vendor = \"\";\n      var variant = \"\";\n      var device_data = data[\"devices\"][device_id];\n      if (\"vendor\" in device_data) {\n        vendor = device_data[\"vendor\"];\n      }\n      var model = device_data[\"model\"];\n      if (\"variant\" in device_data) {\n        variant = device_data[\"variant\"];\n      }\n      var vendorExists = this.vendorExistsInDevices(vendor);\n      if (vendorExists.exists) {\n        var modelExists = this.modelExistsInDevices(vendorExists.existIndex, model);\n        if (modelExists.exists) {\n          var variantExists = this.variantExistsInDevices(vendorExists.existIndex, modelExists.existIndex, variant);\n          if (!variantExists.existIndex) {\n            this.devices[vendorExists.existIndex][\"value\"][modelExists.existIndex][\"value\"].push({\n              \"label\": variant,\n              \"value\": device_data\n            });\n          }\n        } else {\n          this.devices[vendorExists.existIndex][\"value\"].push({\n            \"label\": model,\n            \"value\": [{\n              \"label\": variant,\n              \"value\": device_data\n            }]\n          });\n        }\n      } else {\n        this.devices.push({\n          \"label\": vendor,\n          \"value\": [{\n            \"label\": model,\n            \"value\": [{\n              \"label\": variant,\n              \"value\": device_data\n            }]\n          }]\n        });\n      }\n    });\n  }\n  \n  changeVendor = (v) => {\n    this.setState({\n      vendor: v,\n      model: null,\n      variant: null,\n    });\n  }\n  \n  changeModel = (v) => {\n    this.setState({\n      model: v,\n      variant: v.value[0],\n    });\n  }\n  \n  changeVariant = (v) => {\n    this.setState({\n      variant: v,\n    });\n  }\n\n  findDevice = () => {\n    try {\n      var device = this.state.variant.value;\n      this.setState({\n        device: device,\n        showDeviceData: true,\n      });\n    } catch (error) {\n      this.setState({\n        device: {},\n        showDeviceData: false,\n      });\n    }\n  }\n\n  noOptionsMessage = (props) => <Typography {...props.innerProps}>{this.props.t('components.select.noOptions')}</Typography>;\n\n  render() {\n    return (\n      <Container className=\"home-container\">\n        <Paper>\n          <Typography variant=\"h5\">\n            {this.props.t('appIntro.head')}\n          </Typography>\n          <Typography>\n            {this.props.t('appIntro.para')}\n          </Typography>\n          <br />\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <Select\n                onChange={this.changeVendor}\n                options={this.devices}\n                value={this.state.vendor}\n                placeholder={this.props.t('components.select.placeholder')}\n                noOptionsMessage={this.noOptionsMessage}\n              />\n            </Grid>\n            {\n              this.state.vendor === null ? '' : (\n                <Grid item xs={4}>\n                  <Select\n                    onChange={this.changeModel}\n                    options={this.state.vendor.value}\n                    value={this.state.model}\n                    placeholder={this.props.t('components.select.placeholder')}\n                    noOptionsMessage={this.noOptionsMessage}\n                  />\n                </Grid>\n              )\n            }\n            {\n              this.state.model === null ? '' : (\n                (this.state.model.value.length === 1 && this.state.model.value[0].label === '') ? '' : (\n                  <Grid item xs={4}>\n                    <Select\n                      onChange={this.changeVariant}\n                      options={this.state.model.value}\n                      value={this.state.variant}\n                      placeholder={this.props.t('components.select.placeholder')}\n                      noOptionsMessage={this.noOptionsMessage}\n                    />\n                  </Grid>\n                )\n              )\n            }\n          </Grid>\n          <br />\n          <Button \n            color=\"primary\" \n            variant=\"contained\"\n            onClick={this.findDevice.bind(this)}\n          >\n            {this.props.t('components.submit')}\n          </Button>\n          <br />\n          {this.state.showDeviceData ? (\n            <table className=\"device-table\">\n              <tbody>\n                <tr>\n                  <td>Model</td>\n                  <td>{this.state.device.model}</td>\n                </tr>\n                <tr>\n                  <td>Vendor</td>\n                  <td>{this.state.device.vendor}</td>\n                </tr>\n                { \n                  this.state.device.variant === null || this.state.device.variant === '' ? '' : (\n                    <tr>\n                      <td>Variant</td>\n                      <td>{this.state.device.variant}</td>\n                    </tr>\n                  )\n                }\n                {\n                  this.state.device.images.map((image, i) => {\n                    return <tr key={i}>\n                      <td>{image.type}</td>\n                      <td><a href={\"http://downloads.openwrt.org/snapshots/targets/\" + this.state.device.target + \"/\" + this.state.device.subtarget + \"/\" + image.name}>{image.name}</a></td>\n                    </tr>;\n                  })\n                }\n              </tbody>\n            </table>\n          ) : ''}\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nexport default withTranslation()(Home);\n","import React from \"react\";\nimport { Typography, Paper, Container } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst page404Styles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\n\nexport default function NotFound() {\n  var classes = page404Styles();\n  return (\n    <Container style={{marginTop: '50px'}}>\n      <Paper className={classes.root} elevation={3}>\n        <Typography variant=\"h5\" component=\"h3\">\n          404 Page Not Found\n        </Typography>\n        <Typography component=\"p\">\n          Please head to the home.\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.scss';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Header from './components/header.js'\nimport Home from './containers/home/home';\nimport NotFound from './containers/not-found/not-found';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3F51B5',\n    },\n    secondary: {\n      main: '#009688',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Suspense fallback={\n        <LinearProgress />\n      }>\n        <div className=\"App\">\n          <Header></Header>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route default component={NotFound}></Route>\n            </Switch>\n          </Router>\n        </div>\n      </Suspense>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport translationEN from './locales/en/translation.json';\nimport translationDE from './locales/de/translation.json';\n\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  de: {\n    translation: translationDE\n  }\n};\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}