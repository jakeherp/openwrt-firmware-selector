{"version":3,"sources":["components/header.js","containers/home/home.js","containers/not-found/not-found.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["Header","_useTranslation","useTranslation","t","i18n","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","_React$useState3","_React$useState4","anchorEl","setAnchorEl","changeLanguage","event","val","target","open","Boolean","id","undefined","react_default","a","createElement","AppBar","position","Toolbar","Typography","edge","variant","style","flexGrow","Button","aria-describedby","color","onClick","i18next","language","substring","currentTarget","Language_default","Popper","transition","disablePortal","_ref","TransitionProps","Fade","assign","timeout","Paper","className","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","useStylesSearch","makeStyles","theme","root","borderColor","overflow","margin","borderRadius","transitions","create","&:hover","fade","palette","primary","main","&$focused","backgroundColor","boxShadow","concat","focused","SearchTextField","props","classes","TextField","labeltext","InputProps","endAdornment","InputAdornment","Search_default","Home","deviceNames","deviceNamesID","state","showDeviceData","device","searchResults","showSearch","selectedSearchIndex","query","selectDevice","device_id","_this","setState","data","search","fuzzySet","get","i","length","push","isDescendant","parent","child","node","parentNode","toggleSearchIfIntended","document","getElementsByClassName","_this2","this","keys","forEach","deviceName","FuzzySet","_this3","Container","fullWidth","elevation","List","map","res","index","ListItem","key","button","ListItemText","model","vendor","images","image","type","href","subtarget","Component","withTranslation","page404Styles","padding","spacing","NotFound","marginTop","createMuiTheme","secondary","App","ThemeProvider","react","fallback","LinearProgress","react_router_dom","react_router","path","default","window","location","hostname","match","resources","en","translation","de","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02ac82c7.chunk.js","sourcesContent":["import React from \"react\";\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Toolbar, Typography, AppBar, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Popper, Fade, Paper } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nexport default function Header() {\n\n  const { t, i18n } = useTranslation();\n\n  const [value, setValue] = React.useState('en');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const changeLanguage = event => {\n    var val = event.target.value;\n    i18n.changeLanguage(val);\n    setAnchorEl(null);\n  };\n\n  const openChangeLanguagePopper = event => {\n    setValue(i18next.language.substring(0, 2));\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography edge=\"start\" variant=\"h6\">OpenWrt Firmware Selector Wizard</Typography>\n        <div style={{flexGrow: 1}}></div>\n        <Button aria-describedby={id} color=\"secondary\"  variant=\"contained\" onClick={openChangeLanguagePopper}>\n          {t('components.changeLanguage')} &nbsp;\n          <LanguageIcon />\n        </Button>\n        <Popper \n          id={id} \n          open={open} \n          anchorEl={anchorEl} \n          transition\n          disablePortal\t= {true}\n        >\n          {({ TransitionProps }) => (\n            <Fade {...TransitionProps} timeout={350}>\n              <Paper className=\"language-selector-popper\">\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Change Language</FormLabel>\n                  <br />\n                  <RadioGroup\n                    aria-label=\"Language\"\n                    name=\"language\"\n                    value={value}\n                    onChange={changeLanguage}\n                  >\n                    <FormControlLabel value=\"en\" control={<Radio />} label=\"English\" />\n                    <FormControlLabel value=\"de\" control={<Radio />} label=\"German\" />\n                  </RadioGroup>\n                </FormControl>\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Container, Paper, Typography, InputAdornment, FormControl, TextField, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport './home.scss';\nimport data from '../../data.json';\nimport { withTranslation } from 'react-i18next';\nimport FuzzySet from 'fuzzyset.js';\n\nconst useStylesSearch = makeStyles(theme => ({\n  root: {\n    borderColor: '#e2e2e1',\n    overflow: 'hidden',\n    margin: 0,\n    borderRadius: 4,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      borderColor: fade(theme.palette.primary.main, 0.25),\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction SearchTextField(props) {\n  const classes = useStylesSearch();\n\n  return (\n  <TextField \n    variant=\"outlined\"\n    label={\n      <div className=\"search-label\">\n        {props.labeltext}\n      </div>\n    }\n    InputProps={\n      { classes, \n        endAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon className={classes.label} />\n          </InputAdornment>\n        ) \n      }\n    } {...props} />\n  );\n}\n\nclass Home extends React.Component {\n\n  deviceNames = [];\n  deviceNamesID = {};\n  state = {\n    showDeviceData: false,\n    device: null,\n    searchResults: [],\n    showSearch: false,\n    selectedSearchIndex: 0,\n    query: '',\n  };\n  fuzzySet;\n\n  componentDidMount() {\n    Object.keys(data['devices']).forEach((device_id) => {\n      var deviceName = '';\n      if ('vendor' in data['devices'][device_id]) {\n        deviceName += data['devices'][device_id]['vendor'] + ' ';\n      }\n      deviceName += data['devices'][device_id]['model'];\n      if ('variant' in data['devices'][device_id]) {\n        if (data['devices'][device_id]['variant'] !== '') {\n          deviceName += ' ' + data['devices'][device_id]['variant'];\n        }\n      }\n      this.deviceNames.push(deviceName);\n      this.deviceNamesID[deviceName] = device_id;\n    });\n    this.fuzzySet = FuzzySet(this.deviceNames);\n  }\n\n  selectDevice = (device_id) => {\n    if (device_id != null) {\n      this.setState({\n        device: data[\"devices\"][device_id],\n        showDeviceData: true,\n        showSearch: false,\n        query: data[\"devices\"][device_id][\"vendor\"] + \" \" + data[\"devices\"][device_id][\"model\"] + \" \" + data[\"devices\"][device_id][\"variant\"]\n      });\n    }\n  }\n\n  search = (event) => {\n    const query = event.target.value;\n    this.setState({\n      query,\n      searchResults: [],\n      showSearch: false,\n    });\n    const deviceNames = this.fuzzySet.get(query, undefined, 0);\n    var searchResults = [];\n    if (deviceNames != null) {\n      for (var i = 0; i < deviceNames.length && i < 6; i++) {\n        searchResults.push(data['devices'][this.deviceNamesID[deviceNames[i][1]]]);\n      }\n    }\n    this.setState({\n      searchResults,\n      showSearch: true,\n    });\n  }\n\n  isDescendant = (parent, child) => {\n    var node = child.parentNode;\n    if (child === parent) {\n        return true;\n    }\n    while (node !== null) {\n        if (node === parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n  }\n\n  toggleSearchIfIntended = (event) => {\n    var showSearch = this.isDescendant(document.getElementsByClassName('search-container')[0], event.target) && this.state.query !== '';\n    this.setState({\n      showSearch\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"home-container\" onClick={this.toggleSearchIfIntended}>\n        <Paper className=\"home-container-paper\">\n          <Typography variant=\"h5\">\n            {this.props.t('appIntro.head')}\n          </Typography>\n          <Typography>\n            {this.props.t('appIntro.para')}\n          </Typography>\n          <br />\n          <div className=\"search-container\">\n            <FormControl fullWidth>\n              <SearchTextField\n                id=\"outlined-adornment-search-devices\"\n                labeltext={this.props.t('components.search.label')}\n                value={this.state.query}\n                onChange={this.search}\n                onClick={this.search}\n              />\n            </FormControl>\n          </div>\n          {\n            this.state.showSearch && (\n              <Paper elevation={4} className=\"search-results\">\n                <List>\n                {\n                  this.state.searchResults.map((res, index) => {\n                    return (\n                      <ListItem\n                        key={res[\"device_id\"]}\n                        button\n                        onClick={() => this.selectDevice(res[\"device_id\"])}\n                      >\n                        <ListItemText primary={\n                          <div>\n                            {res[\"vendor\"]} {res[\"model\"]} {res[\"variant\"]}\n                          </div>\n                        } />\n                      </ListItem>\n                    );\n                  })\n                }\n                </List>\n              </Paper>\n            )\n          }\n          {\n            (this.state.searchResults.length === 0 && this.state.showSearch) && (\n              <Paper elevation={4} className=\"search-results\">\n                <ListItem>\n                  <ListItemText primary={this.props.t('components.search.noResults')}></ListItemText>\n                </ListItem>\n              </Paper>\n            )\n          }\n          <br />\n          {this.state.showDeviceData ? (\n            <table className=\"device-table\">\n              <tbody>\n                <tr>\n                  <td>{this.props.t('table.model')}</td>\n                  <td>{this.state.device.model}</td>\n                </tr>\n                <tr>\n                  <td>{this.props.t('table.vendor')}</td>\n                  <td>{this.state.device.vendor}</td>\n                </tr>\n                { \n                  this.state.device.variant === null || this.state.device.variant === '' ? '' : (\n                    <tr>\n                      <td>{this.props.t('table.variant')}</td>\n                      <td>{this.state.device.variant}</td>\n                    </tr>\n                  )\n                }\n                {\n                  this.state.device.images.map((image, i) => {\n                    return <tr key={i}>\n                      <td>{image.type}</td>\n                      <td><a href={\"http://downloads.openwrt.org/snapshots/targets/\" + this.state.device.target + \"/\" + this.state.device.subtarget + \"/\" + image.name}>{image.name}</a></td>\n                    </tr>;\n                  })\n                }\n              </tbody>\n            </table>\n          ) : ''}\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nexport default withTranslation()(Home);\n","import React from \"react\";\nimport { Typography, Paper, Container } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst page404Styles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\n\nexport default function NotFound() {\n  var classes = page404Styles();\n  return (\n    <Container style={{marginTop: '50px'}}>\n      <Paper className={classes.root} elevation={3}>\n        <Typography variant=\"h5\" component=\"h3\">\n          404 Page Not Found\n        </Typography>\n        <Typography component=\"p\">\n          Please head to the home.\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.scss';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Header from './components/header.js'\nimport Home from './containers/home/home';\nimport NotFound from './containers/not-found/not-found';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3F51B5',\n    },\n    secondary: {\n      main: '#009688',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Suspense fallback={\n        <LinearProgress />\n      }>\n        <div className=\"App\">\n          <Header></Header>\n          <Router>\n            <Switch>\n              <Route path=\"\" component={Home}></Route>\n              <Route default component={NotFound}></Route>\n            </Switch>\n          </Router>\n        </div>\n      </Suspense>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport translationEN from './locales/en/translation.json';\nimport translationDE from './locales/de/translation.json';\n\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  de: {\n    translation: translationDE\n  }\n};\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}