{"version":3,"sources":["components/header.js","containers/home/home.js","containers/not-found/not-found.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["Header","react_default","a","createElement","AppBar","position","Toolbar","Typography","edge","variant","style","flexGrow","Button","color","Language_default","React","Component","Home","devices","state","selectedOption","variants","models","showDeviceData","device","vendor","model","changeVendor","v","_this","setState","changeModel","value","changeVariant","findDevice","error","exists","existIndex","this","forEach","d","i","vendorIndex","modelIndex","_this2","Object","keys","data","device_id","device_data","vendorExists","vendorExistsInDevices","modelExists","modelExistsInDevices","variantExistsInDevices","push","label","_this3","Container","className","Paper","Grid","container","spacing","item","xs","react_select_browser_esm","onChange","options","length","onClick","bind","images","map","image","key","type","href","target","subtarget","name","page404Styles","makeStyles","theme","root","padding","NotFound","classes","marginTop","elevation","component","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","header","react_router_dom","react_router","exact","path","default","Boolean","window","location","hostname","match","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fa2b3cd.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Toolbar } from '@material-ui/core';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography edge=\"start\" variant=\"h6\">OpenWrt Firmware Selector Wizard</Typography>\n          <div style={{flexGrow: 1}}></div>\n          <Button color=\"secondary\"  variant=\"contained\">\n            Change Language &nbsp;\n            <LanguageIcon />\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Paper, Typography, Grid, Button } from \"@material-ui/core\";\nimport './home.scss';\nimport Select from 'react-select';\nimport data from '../../data.json';\n\nclass Home extends React.Component {\n\n  devices = [];\n  state = {\n    selectedOption: null,\n    variants: [],\n    models: [],\n    showDeviceData: false,\n    device: null,\n    vendor: null,\n    model: null,\n    variant: null\n  };\n\n  vendorExistsInDevices(vendor) {\n    var exists = false;\n    var existIndex = -1;\n    this.devices.forEach((d, i) => {\n      if (d[\"label\"] === vendor) {\n        exists = true;\n        existIndex = i;\n      }\n    });\n    return {\n      exists,\n      existIndex\n    };\n  }\n  \n  modelExistsInDevices(vendorIndex, model) {\n    var exists = false;\n    var existIndex = -1;\n    this.devices[vendorIndex][\"value\"].forEach((d, i) => {\n      if (d[\"label\"] === model) {\n        exists = true;\n        existIndex = i;\n      }\n    });\n    return {\n      exists,\n      existIndex\n    };\n  }\n  \n  variantExistsInDevices(vendorIndex, modelIndex, variant) {\n    var exists = false;\n    var existIndex = -1;\n    this.devices[vendorIndex][\"value\"][modelIndex][\"value\"].forEach((d, i) => {\n      if (d[\"label\"] === variant) {\n        exists = true;\n        existIndex = i;\n      }\n    });\n    return {\n      exists,\n      existIndex\n    };\n  }\n\n  componentDidMount() {\n    Object.keys(data[\"devices\"]).forEach((device_id) => {\n      var vendor = \"\";\n      var variant = \"\";\n      var device_data = data[\"devices\"][device_id];\n      if (\"vendor\" in device_data) {\n        vendor = device_data[\"vendor\"];\n      }\n      var model = device_data[\"model\"];\n      if (\"variant\" in device_data) {\n        variant = device_data[\"variant\"];\n      }\n      var vendorExists = this.vendorExistsInDevices(vendor);\n      if (vendorExists.exists) {\n        var modelExists = this.modelExistsInDevices(vendorExists.existIndex, model);\n        if (modelExists.exists) {\n          var variantExists = this.variantExistsInDevices(vendorExists.existIndex, modelExists.existIndex, variant);\n          if (!variantExists.existIndex) {\n            this.devices[vendorExists.existIndex][\"value\"][modelExists.existIndex][\"value\"].push({\n              \"label\": variant,\n              \"value\": device_data\n            });\n          }\n        } else {\n          this.devices[vendorExists.existIndex][\"value\"].push({\n            \"label\": model,\n            \"value\": [{\n              \"label\": variant,\n              \"value\": device_data\n            }]\n          });\n        }\n      } else {\n        this.devices.push({\n          \"label\": vendor,\n          \"value\": [{\n            \"label\": model,\n            \"value\": [{\n              \"label\": variant,\n              \"value\": device_data\n            }]\n          }]\n        });\n      }\n    });\n  }\n  \n  changeVendor = (v) => {\n    this.setState({\n      vendor: v,\n      model: null,\n      variant: null,\n    });\n  }\n  \n  changeModel = (v) => {\n    this.setState({\n      model: v,\n      variant: v.value[0],\n    });\n  }\n  \n  changeVariant = (v) => {\n    this.setState({\n      variant: v,\n    });\n  }\n\n  findDevice = () => {\n    try {\n      var device = this.state.variant.value;\n      this.setState({\n        device: device,\n        showDeviceData: true,\n      });\n    } catch (error) {\n      this.setState({\n        device: {},\n        showDeviceData: false,\n      });\n    }\n  }\n  render() {\n    return (\n      <Container className=\"home-container\">\n        <Paper>\n          <Typography variant=\"h5\">Download OpenWrt firmware for your device!</Typography>\n          <Typography>Please use the input below to download firmware for your device!</Typography>\n          <br />\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <Select\n                onChange={this.changeVendor}\n                options={this.devices}\n                value={this.state.vendor}\n              />\n            </Grid>\n            {\n              this.state.vendor === null ? '' : (\n                <Grid item xs={4}>\n                  <Select\n                    onChange={this.changeModel}\n                    options={this.state.vendor.value}\n                    value={this.state.model}\n                  />\n                </Grid>\n              )\n            }\n            {\n              this.state.model === null ? '' : (\n                (this.state.model.value.length === 1 && this.state.model.value[0].label === '') ? '' : (\n                  <Grid item xs={4}>\n                    <Select\n                      onChange={this.changeVariant}\n                      options={this.state.model.value}\n                      value={this.state.variant}\n                    />\n                  </Grid>\n                )\n              )\n            }\n          </Grid>\n          <br />\n          <Button \n            color=\"primary\" \n            variant=\"contained\"\n            onClick={this.findDevice.bind(this)}\n          >\n            Submit\n          </Button>\n          <br />\n          {this.state.showDeviceData ? (\n            <table className=\"device-table\">\n              <tbody>\n                <tr>\n                  <td>Model</td>\n                  <td>{this.state.device.model}</td>\n                </tr>\n                <tr>\n                  <td>Vendor</td>\n                  <td>{this.state.device.vendor}</td>\n                </tr>\n                { \n                  this.state.device.variant === null || this.state.device.variant === '' ? '' : (\n                    <tr>\n                      <td>Variant</td>\n                      <td>{this.state.device.variant}</td>\n                    </tr>\n                  )\n                }\n                {\n                  this.state.device.images.map((image, i) => {\n                    return <tr key={i}>\n                      <td>{image.type}</td>\n                      <td><a href={\"http://downloads.openwrt.org/snapshots/targets/\" + this.state.device.target + \"/\" + this.state.device.subtarget + \"/\" + image.name}>{image.name}</a></td>\n                    </tr>;\n                  })\n                }\n              </tbody>\n            </table>\n          ) : ''}\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Typography, Paper, Container } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst page404Styles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\n\nexport default function NotFound() {\n  var classes = page404Styles();\n  return (\n    <Container style={{marginTop: '50px'}}>\n      <Paper className={classes.root} elevation={3}>\n        <Typography variant=\"h5\" component=\"h3\">\n          404 Page Not Found\n        </Typography>\n        <Typography component=\"p\">\n          Please head to the home.\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.scss';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Header from './components/header.js'\nimport Home from './containers/home/home';\nimport NotFound from './containers/not-found/not-found';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3F51B5',\n    },\n    secondary: {\n      main: '#009688',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Header></Header>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route default component={NotFound}></Route>\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}